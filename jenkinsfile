pipeline{
  agent any  
  environment{
    DOCKERHUB_CREDENTIALS = credentials('dockerhub')
  }
  stages{
    stage('Clone repository'){
      steps{
        checkout scm
        sh "git rev-parse --short HEAD > .git/commit-id"//Ejecuci√≥n en shell para almacenar el commit id en el archivo temporal .git/commit-id                        
        gitcommit = readFile('.git/commit-id').trim() //Almacenamos el contenido el archivo temporal .git/commit-id en la variable gitcommit
      }
    }   
    stage('Build image'){
      steps{
        sh 'docker build -t maxirobledo/nodejsapp:${gitcommit} .'           
      }
    }        
    stage('Docker login'){
      steps{
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u DOCKERHUB_CREDENTIALS_USR --password-stdin'           
      }
    }
    stage('Push image'){
      steps{
        script{
          docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
            //app.push("${env.BUILD_NUMBER}")
            dockerImage.push("${gitcommit}")
          }
        } 
      }            
    } 
  }
}